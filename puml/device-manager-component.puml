@startuml Components

title Device Manager Service

!include <C4/C4_Component>

Container_Boundary(deviceManagerContainerBoundary, "device-manager") {
    Component(GRPCGatewayComponent, "grpc-gateway", "go", "Обрабатывает входные HTTP/HTTPS запросы")
    Component(GRPCClientComponent, "DeviceManagerServiceClient", "interface", "Вызывет функции grpc-сервера")
    Component(GRPCServerComponent, "DeviceManagerServiceServer", "interface", "Принимает и обрабатывает входящие запросы")
    Component(deviceManagerServiceComponent, "Service", "interface", "Предоставляет бизнес-функции")
    Component(deviceManagerStorageComponent, "Storage", "interface", "Предоставляет обработчики для хранилища сервиса")
}

Container_Ext(APIGatewayContainerExt, "API Gateway", "go", "Перенаправляет внешний пользовательский трафик в внутреннию сеть")
Container_Ext(databaseContainerExt, "device-manager", "PostgreSQL", "Хранит данные о устройствах")
Container_Ext(kafkaContainerExt, "Kafka", "Message bus")

Rel(APIGatewayContainerExt, GRPCGatewayComponent, "JSON", "HTTP/HTTPS")
Rel(GRPCGatewayComponent, GRPCClientComponent, "Calls grpc", "protobuf")
Rel(GRPCClientComponent, GRPCServerComponent, "Receive and handle incoming traffic", "protobuf")
Rel(GRPCServerComponent, deviceManagerServiceComponent, "Calls methods")
Rel(deviceManagerServiceComponent,deviceManagerStorageComponent, "Calls methods")
Rel(deviceManagerStorageComponent, databaseContainerExt, "Uses", "SQL")
Rel(deviceManagerServiceComponent, kafkaContainerExt, "Produce message", "TCP")

SHOW_LEGEND()

@enduml